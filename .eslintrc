{
  "parser": "babel-eslint",
  "plugins": [
    "import",
    "prefer-object-spread",
    "react",
    "you-dont-need-lodash-underscore"
  ],
  "extends": [
    "plugin:you-dont-need-lodash-underscore/all-warn"
  ],
  "env": {
    "browser": true,
    "commonjs": true,
    "es6": true,
    "node": true
  },
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "rules": {
    "import/export": "error",
    "import/exports-last": "error",
    "import/extensions": "error",
    "import/first": [
      "error",
      {
        "absolute-first": true
      }
    ],
    "import/newline-after-import": "error",
    "import/no-absolute-path": "error",
    "import/no-duplicates": "error",
    "import/no-dynamic-require": "error",
    "import/no-extraneous-dependencies": "error",
    "import/no-mutable-exports": "error",
    "import/no-named-as-default": "error",
    "import/no-named-as-default-member": "error",
    "import/no-named-default": "error",
    "import/no-webpack-loader-syntax": "error",
    "import/order": "error",
    "import/prefer-default-export": "error",
    "prefer-object-spread/prefer-object-spread": "error",
    "react/jsx-boolean-value": "error",
    "react/jsx-closing-bracket-location": [
      "error",
      {
        "selfClosing": "after-props",
        "nonEmpty": "after-props"
      }
    ],
    "react/jsx-closing-tag-location": "error",
    "react/jsx-curly-brace-presence": [
      "error",
      "never"
    ],
    "react/jsx-curly-spacing": "error",
    "react/jsx-equals-spacing": "error",
    "react/jsx-handler-names": "error",
    "react/jsx-indent": [
      "error",
      "tab"
    ],
    "react/jsx-indent-props": [
      "error",
      "tab"
    ],
    "react/jsx-key": "error",
    "react/jsx-no-bind": "error",
    "react/jsx-no-comment-textnodes": "error",
    "react/jsx-no-duplicate-props": "error",
    "react/jsx-no-target-blank": "error",
    "react/jsx-no-undef": "error",
    "react/jsx-pascal-case": "error",
    "react/jsx-sort-props": [
      "error",
      {
        "callbacksLast": true,
        "noSortAlphabetically": true,
        "reservedFirst": true,
        "shorthandFirst": true
      }
    ],
    "react/jsx-tag-spacing": "error",
    "react/jsx-uses-react": "error",
    "react/jsx-uses-vars": "error",
    "react/jsx-wrap-multilines": [
      "error",
      {
        "declaration": "parens-new-line",
        "assignment": "parens-new-line",
        "return": "parens-new-line",
        "arrow": "parens-new-line",
        "condition": "ignore",
        "logical": "ignore",
        "prop": "ignore"
      }
    ],
    "react/no-access-state-in-setstate": "error",
    "react/no-array-index-key": "error",
    "react/no-children-prop": "error",
    "react/no-danger": "error",
    "react/no-danger-with-children": "error",
    "react/no-deprecated": "error",
    "react/no-did-update-set-state": "error",
    "react/no-direct-mutation-state": "error",
    "react/no-find-dom-node": "error",
    "react/no-is-mounted": "error",
    "react/no-render-return-value": "error",
    "react/no-string-refs": "error",
    "react/no-typos": "error",
    "react/no-unescaped-entities": [
      "error",
      {
        "forbid": [
          ">",
          "}"
        ]
      }
    ],
    "react/no-unknown-property": "error",
    "react/no-unsafe": "error",
    "react/no-unused-state": "error",
    "react/no-will-update-set-state": "error",
    "react/prefer-es6-class": [
      "error",
      "always"
    ],
    "react/prop-types": [
      "error",
      {
        "skipUndeclared": true
      }
    ],
    "react/react-in-jsx-scope": "error",
    "react/require-render-return": "error",
    "react/self-closing-comp": "error",
    "react/sort-comp": "error",
    "react/style-prop-object": "error",
    "react/void-dom-elements-no-children": "error",
    "array-bracket-spacing": [
      "error",
      "never"
    ],
    "array-callback-return": "error",
    "arrow-body-style": [
      "error",
      "as-needed"
    ],
    "arrow-parens": "error",
    "arrow-spacing": "error",
    "brace-style": [
      "error",
      "1tbs",
      {
        "allowSingleLine": true
      }
    ],
    "camelcase": "error",
    "comma-dangle": [
      "error",
      "always-multiline"
    ],
    "comma-style": [
      "error",
      "last"
    ],
    "dot-notation": "error",
    "eol-last": [
      "error",
      "always"
    ],
    "eqeqeq": "error",
    "indent": [
      "error",
      "tab",
      {
        "SwitchCase": 1
      }
    ],
    "key-spacing": [
      "error",
      {
        "align": "value",
        "beforeColon": false,
        "afterColon": true
      }
    ],
    "keyword-spacing": "error",
    "new-cap": [
      "error",
      {
        "capIsNew": false,
        "newIsCapExceptions": [
          "require"
        ]
      }
    ],
    "newline-per-chained-call": "error",
    "no-array-constructor": "error",
    "no-case-declarations": "error",
    "no-class-assign": "error",
    "no-console": "error",
    "no-const-assign": "error",
    "no-dupe-class-members": "error",
    "no-else-return": [
      "error",
      {
        "allowElseIf": false
      }
    ],
    "no-eval": "error",
    "no-iterator": "error",
    "no-extra-semi": "error",
    "no-fallthrough": [
      "error",
      {
        "commentPattern": "falls?\\s?through"
      }
    ],
    "no-func-assign": "error",
    "no-mixed-operators": "error",
    "no-mixed-spaces-and-tabs": [
      "error",
      "smart-tabs"
    ],
    "no-multi-assign": "error",
    "no-multi-spaces": "error",
    "no-multiple-empty-lines": [
      "error",
      {
        "max": 1,
        "maxEOF": 0,
        "maxBOF": 0
      }
    ],
    "no-nested-ternary": "error",
    "no-new-func": "error",
    "no-new-object": "error",
    "no-new-wrappers": "error",
    "no-param-reassign": "error",
    "no-restricted-globals": [
      "error",
      {
        "name": "isNaN",
        "message": "Use Number.isNaN instead of global isNaN. https://github.com/airbnb/javascript#standard-library--isnan"
      },
      {
        "name": "isFinite",
        "message": "Use Number.isFinite instead of global isFinite. https://github.com/airbnb/javascript#standard-library--isfinite"
      }
    ],
    "no-restricted-properties": [
      2,
      {
        "object": "Math",
        "property": "pow",
        "message": "Use exponentiation operator ** when calculating exponentiations. https://github.com/airbnb/javascript#es2016-properties--exponentiation-operator"
      }
    ],
    "no-trailing-spaces": "error",
    "no-undef": "error",
    "no-unexpected-multiline": "error",
    "no-unneeded-ternary": "error",
    "no-unreachable": "error",
    "no-unused-vars": "error",
    "no-use-before-define": "error",
    "no-useless-call": "error",
    "no-useless-constructor": "error",
    "no-useless-escape": "error",
    "no-var": "error",
    "no-whitespace-before-property": "error",
    "object-curly-spacing": [
      "error",
      "always"
    ],
    "object-shorthand": "error",
    "one-var": [
      "error",
      "never"
    ],
    "padded-blocks": [
      "error",
      "never"
    ],
    "prefer-arrow-callback": "error",
    "prefer-const": "error",
    "prefer-destructuring": [
      "error",
      {
        "array": true,
        "object": true
      },
      {
        "enforceForRenamedProperties": false
      }
    ],
    "prefer-rest-params": "error",
    "prefer-spread": "error",
    "prefer-template": "error",
    "quote-props": [
      "error",
      "as-needed"
    ],
    "quotes": [
      "error",
      "single"
    ],
    "semi": [
      "error",
      "always"
    ],
    "semi-spacing": [
      "error",
      {
        "before": false,
        "after": true
      }
    ],
    "semi-style": [
      "error",
      "last"
    ],
    "space-before-blocks": "error",
    "space-before-function-paren": [
      "error",
      "never"
    ],
    "space-in-parens": [
      "error",
      "never"
    ],
    "space-infix-ops": "error",
    "spaced-comment": [
      "error",
      "always"
    ],
    "template-curly-spacing": "error"
  },
  "overrides": [
    {
      "files": [
        "**/*.spec.js",
        "**/*.test.js"
      ],
      "env": {
        "jest": true
      }
    }
  ]
}